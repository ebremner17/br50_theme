<?php

/**
 * @file
 * Theme file for br50_theme.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\media\Entity\Media;

/**
 * Implements hook_preprocess_HOOK().
 */
function br50_theme_preprocess_region(&$variables) {

  // If this is the header region set the theme directory.
  if ($variables['region'] == 'header') {

    // Get the theme handler service.
    $themeHandler = \Drupal::service('theme_handler');

    // Set the theme path directory variable.
    $variables['theme_path'] = $themeHandler->getTheme($themeHandler->getDefault())->getPath();
  }
}

/**
 * Implements hook_preprocess_node().
 */
function br50_theme_preprocess_node(&$variables) {

  // Get the node object.
  $node = $variables['node'];

  // If this is an event, get the dates.
  if ($node->getType() == 'event') {
    $variables['when'] = $node->field_when->view('teaser');
  }

  // If this is an news, get the date.
  if ($node->getType() == 'br50_news') {
    $variables['news_date'] = $node->field_br50_news_date->view('teaser');
  }

  // If this node has banners, add it as variables.
  if (
    $node->hasField('field_br50_banners') &&
    !$node->get('field_br50_banners')->isEmpty()
  ) {

    // Get the banners.
    $banners = $node->get('field_br50_banners')->getValue();

    // Step through each of the banners, and get the info.
    foreach ($banners as $banner) {

      // Load the media.
      $media = Media::load($banner['target_id']);

      // Get the media info based on the bundle.
      switch ($media->bundle()) {

        case 'image':

          // Get the picture sources.
          $sources = _br50_theme_prepare_responsive_image($media, 'ris_br50_responsive');

          // Set the image variables for the template.
          $image['alt'] = $sources['alt'];
          $image['sources'] = $sources['responsive_sources'];
          $image['img_element'] = $sources['img_element']['#uri'];
          $image['caption'] = $media->field_br50_image_caption->value;

          // Set the info in the array.
          $br50_banners[] = [
            'type' => 'image',
            'image' => $image,
          ];

          break;

        case 'remote_video':

          // Get the video info.
          $br50_banners[] = [
            'type' => 'video',
            'video' => \Drupal::entityTypeManager()
              ->getViewBuilder('media')
              ->view($media, 'default'),
            'caption' => $media->field_br50_image_caption->value,
          ];

          break;
      }
    }

    // Set the banners and node title.
    $variables['br50_banners'] = $br50_banners;
    $variables['node_title'] = $node->getTitle();
  }
}

/**
 * Implements hook_preprocess_page_title().
 */
function br50_theme_preprocess_block(&$variables) {

  // If this is the page title block, see if we show the title.
  if ($variables['plugin_id'] == 'page_title_block') {

    // Set the show title to true to start.
    $variables['show_title'] = TRUE;

    // Check if this is a node and if so check for hero image.
    if ($node = \Drupal::routeMatch()->getParameter('node')) {

      // Check if we have a banners field and if so,
      // check if we should show the title.
      if ($node->hasField('field_br50_banners')) {

        // If this has a hero image, set variable to not
        // show the title.
        if (!empty($node->field_br50_banners->getValue())) {
          $variables['show_title'] = FALSE;
        }
      }
    }
  }
}

/**
 * @param EntityInterface|null $entity
 *   Null or entity object.
 * @param string $image_style
 *   The responsive image style.
 *
 * @return array
 *   Array of sources for the image.
 */
function _br50_theme_prepare_responsive_image(?EntityInterface $entity, string $image_style): array {

  // Ensure that we can load an entity on the media.
  if ($entity && isset($entity->field_media_image->entity)) {

    // Load in the file object if we have one.
    if ($file = $entity->field_media_image->entity) {

      // Need to set these variables so that responsive image function,
      // has all the necessary info to process the image style.
      $variables['uri'] = $file->getFileUri();
      $variables['responsive_image_style_id'] = $image_style;

      // Set the alt for the image.
      $variables['alt'] = $entity->field_media_image->alt;

      // This is a function from the responsive image module that sets all
      // the variables for the sources of the responsive image.
      template_preprocess_responsive_image($variables);

      // Step through each of the sources and setup our own sources array.
      foreach ($variables['sources'] as $source) {

        // Get the source set.
        $srcset = $source->storage()['srcset']->value();

        // Break apart the source set.
        $srcset_parts = explode('/', $srcset);

        // Step through each and get the style.
        foreach ($srcset_parts as $srcset_part) {
          if (strpos($srcset_part, 'uw_is') !== FALSE) {
            $style = $srcset_part;
            break;
          }
        }

        // Set the info about the responsive image.
        $variables['responsive_sources'][] = [
          'srcset' => $srcset,
          'media' => $source->storage()['media']->value(),
          'type' => $source->storage()['type']->value(),
          'style' => $image_style,
        ];
      }

      return $variables;
    }
  }

  return [];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function br50_theme_preprocess_html(&$variables) {

  $config = \Drupal::config('br50_site.settings');

  $operating_hours = $config->get('operating_hours');

  if ($operating_hours) {
    $variables['page']['operating_hours'] = [
      '#type' => 'processed_text',
      '#text' => $config->get('operating_hours')['value'],
      '#format' => $config->get('operating_hours')['format'],
    ];
  }
}
